# day29

스레드(Thread)
	
	참고 ]
		
		자바가 프로그램을 실행시키는 방법
			
			1. Processor를 이용하는 방법
			==> 운영체제에 의해서 자신이 사용할 메모리를 할당을 받고
				레지스터리에 등록한 후 실행되는 방식
				
				단점 ]
					각각의 프로세스 프로그램은 
					원칙적으로 데이터를 다른 프로세스 프로그램에게 주지 못한다.
					(메모리끼리 호환이 되지 않는다.)
					
				지금까지 우리가 실행한 모든 자바 프로그램은 
				프로세스를 이용한 방식을 실행되었다.
				(즉, main 함수부터 시작하는 프로그램은 프로세스 방식을 실행하게 된다.)
				
			2. Thread를 이용하는 방법
				
			==> 독립적인 메모리를 할당받지 못하고 실행하는 프로그램이다.
				대신 프로세스 프로그램이 사용하는 메모리를 같이 공유하게 된다.
				
				참고 ]
					스레드는 혼자서는 실행되지 못한다.
					반드시 다른 프로세스가 실행된 후 실행 되어야 한다.
					
				장점 ]
					스레드 프로그램은 메모리를 같이 사용하므로
					같은 메모리를 사용하는 프로그램끼리는
					데이터 교환이 가능하다.
					
----------------------------------------------------------------------------------------------------------------------
용어정리

	1. 시분할 시스템
		==> CPU는 한순간에는 오직 한개의 프로그램만 실행이 된다.
			하지만 여러개의 프로그램이 동시에 실행되기를 원한다면??
			한 순간에는 한개의 프로그램만 실행하고
			적당한 시간이 되면 그 프로그램을 보내고
			다른 프로그램을 받아서 실행하도록 하고 있다.
			결론적으로
				각각의 프로그램 마다 CPU가 실행할 시간을 정한 후
				그 시간만큼만 실행된다.
				
	2. 우선순위(Priority)
		==> CPU는 시분할 시스템에 의해서 특정 프로그램을 자신이 분배한 시간만큼 실행한다.
			시간이 종료되면 다음 프로그램을 실행하게 된다.
			이때 CPU가 다음 프로그램을 선택하는 기준을 
			우선 순위라고 한다.
			
			쉽게 말해 우선순위가 높음 프로그램이
			CPU에 의해 먼저 실행된다.
			
-----------------------------------------------------------------------------------------------------------------------

자바에서 Thread 프로그램을 만드는 방법

	1. Thread 를 상속받아서 만드는 방법
		1) Thread 클래스를 상속 받은 클래스를 제작한다.
		2) 그 클래스 안에 반드시 run() 함수를 오버라이드 해 놓는다.
			==> run() 는 프로세스 방식의 main() 함수에 해당하는 함수로
				스레드 프로그램의 시작함수가 된다.
		3) run() 함수부터 출발해서 그 프로그램이 해야할 일을 코딩한다.
		
			정리 ]
				Thread 상속받은 클래스를 만들고
				run() 오버라이딩한다.
	
	
	2. Runnable 인터페이스를 구현해서 만드는 방법
		1) Runnable 인터페이스를 구현하는 클래스를 제작한다.
		2) 그 클래스안에 반드시 run()함수를 오버라이드 해놓는다.
		3) run() 함수 내부에 해야할 일을 코딩한다.
		
		
		참고 ]
			상속은 오직 단일 상속만 허용하므로
			만약 제작하는 프로그램이 다른 클래스를 또 필요로 한다면 
			extends Thread 라고 기술하는 순간
			다른 클래스는 상속 받을 수 없게 된다.
			따라서 다른 클래스를 필요로 하는 경우를 대비해서
			두가지 방식을 제공하고 있다.
			
			
	참고 ]
		Runnable 상태
		==> CPU가 시분할 시스템에 의해서 프로그램을 선택할 때
			선택 가능한 프로그램이 모여있는 상태
			**
			참고로
			CPU는 Runnable 상태에 있는 프로그램만 실행할 수 있다.
			
			*****
			new Born 상태	---> Runnable 상태로 전위 시키는 명령(위치를 바꾸는 명령)
				start();
			
			참고 ]
				실행함수가 run() 함수이므로
				직접 run() 함수를 호출하면 이것은 스레드 동작이 아니고
				프로세서의 한 함수를 호출하는 효과가 된다.
				(병렬 처리가 되지 않는다.)
				
		Run 상태
		==> CPU가 특정 프로그램을 실제로 실행하는 상태를 말한다.
			Run 상태에는 오직 한개의 프로그램만 들어갈 수 있다.
			그리고 Runnable --> Run 상태로의 전위는
			오직 운영체제의 몫이다.(개발자가 손댈 수 있는 영역이 아니다.)
			
			참고 ]
				Run	--> Runnable 상태로의 전위는
					1. 운영체제의 목이기도 하고
						(시분할 시스템에 의해서 시간이 만료된 시점)
						
					2. 개발자가 선택할 수도 있다.
--------------------------------------------------------------------------------------------------------------------
	참고]
		스레드 프로그램이 필요한 이유??
			1. 독립적으로 실행이 필요한 경우
				예 ]
					서버 프로그램에서는 
					각각의 클라이언트와 통신하는 프로그램이 독립적으로 실행이 되어야 한다.
					즉, 클라이언트오 통신은 다른 작업과 별개로 독립적으로 실행이 되어야 할 필요가 있다.
					
			2. 백그라운드 작업이 필요한 경우
				예 ]
					파일을 다운로드 하면서
					다른 페이지를 구경하는 경우...
					
--------------------------------------------------------------------------------------------------------------------
스레드 프로그램을 동작하는 방법
	1. Thread를 상속받은 경우
		
		1) new 시킨다.		==> New Born 상태가 된다.
		2) start 시킨다.	==> Runable 상태로 전위시킨다.	
		
		
	2. Runnable 인터페이스를 구현한 경우
		
		1) new 시킨다.	==> 일반 클래스를 사용하기 위한 객체 지향 방법
		2) Thread 클래스를 new 시키면서 1)의 결과를 넣어준다.
			==> new Born 상태가 된다.
		3) 2)의 결과를 이용해서 start 시킨다.
			==> 이순간 Runnable 상태로 전위가 된다.
			
참고 ]
	하나의 스레드 프로그램은 여러번 실행할 수 있다.
	이때 이들은 각각 독립적으로 실행된다.
	즉, 하나의 스레드 처럼 여러개 프로그램이 실행되어진다.
	
	스레드에 부여된 이름은 ...
	
		String name = Tread.currentThread().getName();
	으로 기억시켜서 사용할 수 있다.
	
	
	1. Run --> Runnable 상태로 전위
		
		명령어]
			yield();
			
		참고 ]
			Block 상태 :
					실행을 잠시 중단하는 상태를 말한다.
					Block 상태에 있는 프로그램은 절대로 실행되지 않는다.
					(실행이 가능한 프로그램은 반드시 Runnable 상태 여야 가능하다.)
					그리고 Block 상태에서 빠져오는 방법은
					오직 Runnable 상태로 전위되는 것 뿐이다.
					따라서 Block 상태에서 직접 선택해서 실행할 수은 없다.
					
	2. Run --> Block 상태로 전위
		
		명령어 ]
			
			sleep()
			==> 이 함수는 시간을 정해주고
				그 시간이 되면 자동적으로  Runnable 상태로 복귀시키는 명령이다.
				
-------------------------------------------------------------------------------------------------------------------				
					

			



























			